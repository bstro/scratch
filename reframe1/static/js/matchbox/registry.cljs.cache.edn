;; Analyzed by ClojureScript 0.0-3211
{:defs {disable-listeners! {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 0, :method-params [([ref type :as path])], :arglists [[& [ref type :as path]]], :arglists-meta (nil)}, :arglists (quote ([& [ref type :as path]])), :doc "Remove all known listeners within appropriate scope.\n\n  By known listeners, we mean listeners that were added with Matchbox.\n\n  The scope is determined by the args:\n\n  0-arity: remove all listeners\n  1-arity: remove all listeners on a given `ref`\n  2-arity: remove all listeners of `type` on a given `ref`\n\n  For removing a single listener, see `disable-listener!`", :end-column 25, :end-line 45, :column 7, :line 45, :file "/Users/bstro/Dropbox/Developer/scratch/reframe1/static/js/matchbox/registry.cljs"}, :name matchbox.registry/disable-listeners!, :variadic true, :file "static/js/matchbox/registry.cljs", :end-column 25, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [([ref type :as path])], :arglists [[& [ref type :as path]]], :arglists-meta (nil)}, :method-params [([ref type :as path])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 0, :fn-var true, :arglists [[& [ref type :as path]]], :doc "Remove all known listeners within appropriate scope.\n\n  By known listeners, we mean listeners that were added with Matchbox.\n\n  The scope is determined by the args:\n\n  0-arity: remove all listeners\n  1-arity: remove all listeners on a given `ref`\n  2-arity: remove all listeners of `type` on a given `ref`\n\n  For removing a single listener, see `disable-listener!`", :test true}, disable-listener! {:protocol-inline nil, :meta {:arglists (quote ([unsub!])), :end-column 24, :end-line 38, :column 7, :line 38, :file "/Users/bstro/Dropbox/Developer/scratch/reframe1/static/js/matchbox/registry.cljs"}, :name matchbox.registry/disable-listener!, :variadic false, :file "static/js/matchbox/registry.cljs", :end-column 24, :method-params ([unsub!]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([unsub!])), :test true}, cleanup! {:protocol-inline nil, :meta {:arglists (quote ([])), :doc "Remove empty branches in `unsubs`", :private true, :end-column 16, :end-line 33, :column 8, :line 33, :file "/Users/bstro/Dropbox/Developer/scratch/reframe1/static/js/matchbox/registry.cljs"}, :private true, :name matchbox.registry/cleanup!, :variadic false, :file "static/js/matchbox/registry.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Remove empty branches in `unsubs`", :test true}, -cleanup! {:protocol-inline nil, :meta {:arglists (quote ([data])), :private true, :end-column 17, :end-line 23, :column 8, :line 23, :file "/Users/bstro/Dropbox/Developer/scratch/reframe1/static/js/matchbox/registry.cljs"}, :private true, :name matchbox.registry/-cleanup!, :variadic false, :file "static/js/matchbox/registry.cljs", :end-column 17, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data])), :test true}, disable-all! {:protocol-inline nil, :meta {:arglists (quote ([fs])), :private true, :end-column 20, :end-line 19, :column 8, :line 19, :file "/Users/bstro/Dropbox/Developer/scratch/reframe1/static/js/matchbox/registry.cljs"}, :private true, :name matchbox.registry/disable-all!, :variadic false, :file "static/js/matchbox/registry.cljs", :end-column 20, :method-params ([fs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fs])), :test true}, flatten-vals {:protocol-inline nil, :meta {:arglists (quote ([xs])), :private true, :end-column 20, :end-line 14, :column 8, :line 14, :file "/Users/bstro/Dropbox/Developer/scratch/reframe1/static/js/matchbox/registry.cljs"}, :private true, :name matchbox.registry/flatten-vals, :variadic false, :file "static/js/matchbox/registry.cljs", :end-column 20, :method-params ([xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([xs])), :test true}, register-listener {:protocol-inline nil, :meta {:arglists (quote ([ref type unsub!])), :end-column 24, :end-line 10, :column 7, :line 10, :file "/Users/bstro/Dropbox/Developer/scratch/reframe1/static/js/matchbox/registry.cljs"}, :name matchbox.registry/register-listener, :variadic false, :file "static/js/matchbox/registry.cljs", :end-column 24, :method-params ([ref type unsub!]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ref type unsub!])), :test true}, unsubs-flat {:meta {:end-column 21, :end-line 8, :column 10, :line 8, :file "/Users/bstro/Dropbox/Developer/scratch/reframe1/static/js/matchbox/registry.cljs"}, :file "static/js/matchbox/registry.cljs", :line 8, :column 1, :end-line 8, :end-column 21, :test true, :name matchbox.registry/unsubs-flat}, unsubs {:meta {:end-column 16, :end-line 5, :column 10, :line 5, :file "/Users/bstro/Dropbox/Developer/scratch/reframe1/static/js/matchbox/registry.cljs"}, :file "static/js/matchbox/registry.cljs", :line 5, :column 1, :end-line 5, :end-column 16, :test true, :name matchbox.registry/unsubs}}, :imports nil, :requires {clojure.walk clojure.walk, walk clojure.walk}, :uses nil, :require-macros nil, :use-macros nil, :excludes #{}, :doc nil, :name matchbox.registry}